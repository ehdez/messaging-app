{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelhernandez/dev/messaging-app/client/src/contexts/ConversationsProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConversationsContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n\n  return useContext(ConversationsContext);\n}\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function ConversationsProvider({\n  children\n}) {\n  _s2();\n\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n\n  function createConversation(recipient) {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(ConversationsProvider, \"9L8V6GHkDskoUaMzXQxf9MBUh4s=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ConversationsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationsProvider\");","map":{"version":3,"sources":["/Users/emanuelhernandez/dev/messaging-app/client/src/contexts/ConversationsProvider.js"],"names":["React","useContext","useLocalStorage","ConversationsContext","createContext","useConversations","ConversationsProvider","children","conversations","setConversations","createConversation","recipient","prevConversations","recipients","messages"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,oBAAoB,gBAAGH,KAAK,CAACI,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA2B;AAAA;;AAChC,SAAOJ,UAAU,CAACE,oBAAD,CAAjB;AACD;;GAFeE,gB;;AAIhB,OAAO,SAASC,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAAA;;AAElD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;;AAEA,WAASQ,kBAAT,CAA4BC,SAA5B,EAAsC;AACpCF,IAAAA,gBAAgB,CAACG,iBAAiB,IAAI;AACpC,aAAO,CAAC,GAAGA,iBAAJ,EAAuB;AAACC,QAAAA,UAAD;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAvB,CAAP;AACD,KAFe,CAAhB;AAGD;;AAED,sBACI,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAACN,MAAAA,aAAD;AAAgBE,MAAAA;AAAhB,KAAtC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD;;IAfeD,qB;UAE4BJ,e;;;KAF5BI,qB","sourcesContent":["import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations(){\n  return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ children }) {\n  \n  const [conversations, setConversations] = useLocalStorage('conversations', [])\n  \n  function createConversation(recipient){\n    setConversations(prevConversations => {\n      return [...prevConversations, {recipients, messages: []}]\n    })\n  }\n\n  return (\n      <ConversationsContext.Provider value={{conversations, createConversation}}>\n        {children}\n      </ConversationsContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}