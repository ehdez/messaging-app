{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelhernandez/dev/messaging-app/client/src/components/OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenConversation() {\n  _s();\n\n  const [text, setText] = useState('');\n  const lastMessageRef = useRef();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText('');\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        smooth: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n        children: selectedConversation.messages.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n              children: message.fromMe ? 'You' : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            required: true,\n            value: text,\n            onChange: e => setText(e.target.value),\n            style: {\n              height: '75px',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OpenConversation, \"BdkM4zkjYal8PfaX/tsTt6LeqhA=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["/Users/emanuelhernandez/dev/messaging-app/client/src/components/OpenConversation.js"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","lastMessageRef","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","id","current","scrollIntoView","smooth","messages","message","index","fromMe","senderName","target","value","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function OpenConversation() {\n  const [text, setText] = useState('')\n  const lastMessageRef = useRef()\n  const {sendMessage, selectedConversation } = useConversations()\n\n  function handleSubmit(e){\n    e.preventDefault()\n\n    sendMessage(selectedConversation.recipients.map(r => r.id),text)\n    setText('')\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current){\n      lastMessageRef.current.scrollIntoView({smooth: true})\n    }\n  })\n\n  return (\n    <div className=\"d-flex flex-column flex-grow-1\">\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n          {selectedConversation.messages.map((message, index) => {\n            return (\n              <div\n                key={index}\n                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' : ''}`}\n              >\n                <div className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\n                  {message.text}\n                </div>\n                <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>\n                  {message.fromMe ? 'You' : message.senderName}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <InputGroup>\n            <Form.Control \n            as=\"textarea\" \n            required \n            value={text}\n            onChange={e=> setText(e.target.value)}\n            style={{ height: '75px', resize:'none'}}\n            />\n            <InputGroup.Append>\n              <Button type=\"submit\">Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}