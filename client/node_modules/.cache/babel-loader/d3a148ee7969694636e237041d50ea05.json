{"ast":null,"code":"var _jsxFileName = \"/Users/emanuelhernandez/dev/messaging-app/client/src/components/NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Modal } from 'react-bootstrap';\nimport { contacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n\n  const [selectedContactsIds, setSelectedContactsIds] = useState([]);\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactsIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, id];\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Chek, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewConversationModal, \"ZeqrDdCsJf+28R7kD9K1Ztygjx0=\");\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["/Users/emanuelhernandez/dev/messaging-app/client/src/components/NewConversationModal.js"],"names":["React","useState","Form","Button","Modal","contacts","NewConversationModal","selectedContactsIds","setSelectedContactsIds","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","id","handleSubmit","map","contact","selectedContactIds","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;;AAEA,WAASQ,oBAAT,CAA8BC,SAA9B,EAAwC;AACtCF,IAAAA,sBAAsB,CAACG,sBAAsB,IAAI;AAC/C,UAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAA+C;AAC7C,eAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,MAAM,IAAI;AAC7C,iBAAOJ,SAAS,KAAKI,MAArB;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAO,CAAC,GAAGH,sBAAJ,EAA4BI,EAA5B,CAAP;AACD;AACF,KARqB,CAAtB;AASD;;AAED,sBACE;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEC,YAAhB;AAAA,kBACGX,QAAQ,CAACY,GAAT,CAAaC,OAAO,iBACnB,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAEA,OAAO,CAACH,EAA/B;AAAA,iCACE,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAEI,kBAAkB,CAACP,QAAnB,CAA4BM,OAAO,CAACH,EAApC,CAFT;AAGE,YAAA,KAAK,EAAEG,OAAO,CAACE,IAHjB;AAIE,YAAA,QAAQ,EAAE,MAAMX,oBAAoB,CAACS,OAAO,CAACH,EAAT;AAJtC;AAAA;AAAA;AAAA;AAAA;AADF,WAAwCG,OAAO,CAACH,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCuBT,oB;;KAAAA,oB","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Modal } from 'react-bootstrap'\nimport { contacts } from '../contexts/ContactsProvider'\n\nexport default function NewConversationModal() {\n  const [selectedContactsIds, setSelectedContactsIds] = useState([])\n\n  function handleCheckboxChange(contactId){\n    setSelectedContactsIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)){\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId\n        })\n      } else {\n        return [...prevSelectedContactIds, id]\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Modal.Header closeButton>Create Contact</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {contacts.map(contact => (\n            <Form.Group controlId={contact.id} key={contact.id}>\n              <Form.Chek \n                type=\"checkbox\"\n                value={selectedContactIds.includes(contact.id)}\n                label={contact.name}\n                onChange={() => handleCheckboxChange(contact.id)}\n              />\n            </Form.Group>\n          ))}\n        </Form>\n      </Modal.Body>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}